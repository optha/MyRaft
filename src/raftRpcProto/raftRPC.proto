syntax = "proto3";

package raftRpcProto;

// 开启stub服务
option cc_generic_services = true;

// 日志实体
message LogEntry{
    bytes Command  = 1;
	int32 LogTerm  = 2;
	int32 LogIndex = 3;
}

// 由leader复制log条目，也可以当做是心跳连接，注释中的rf为leader节点
message AppendEntriesArgs  {
	int32 Term                  = 1;
	int32 LeaderId              = 2;
	int32 PrevLogIndex          = 3;
	int32 PrevLogTerm           = 4;
	repeated LogEntry Entries   = 5;
	int32 LeaderCommit          = 6;
}


message AppendEntriesReply {
	int32 Term              = 1;
	bool Success            = 2;
	int32 UpdateNextIndex   = 3;
    // 标识节点（网络）状态
	int32 AppState          = 4;
}

message RequestVoteArgs  {
	int32 Term         =1;
	int32 CandidateId  =2;
	int32 LastLogIndex =3;
	int32 LastLogTerm  =4;
}


message RequestVoteReply  {
	int32 Term        =1;
	bool VoteGranted  =2;
	int32 VoteState   =3;
}


message InstallSnapshotRequest  {
	int32 LeaderId                 =1;
	int32 Term                     =2;
	int32 LastSnapShotIncludeIndex =3;
	int32 LastSnapShotIncludeTerm  =4;
    // 快照信息，用bytes来传递
	bytes Data                     =5;
}

// 返回Term，因为对于快照只要Term是符合的就是无条件接受的
message InstallSnapshotResponse  {
	int32 Term  = 1;
}

//只有raft节点之间才会涉及rpc通信
service raftRpc  
{
    rpc AppendEntries(AppendEntriesArgs) returns(AppendEntriesReply);
    rpc InstallSnapshot (InstallSnapshotRequest) returns (InstallSnapshotResponse);
    rpc RequestVote (RequestVoteArgs) returns (RequestVoteReply);
}
